---
description: Guidelines for creating and maintaining Cursor rules to ensure consistency and effectiveness.
globs: .cursor/rules/*.mdc
alwaysApply: true
---
- **Required Rule Structure:**
  ```markdown
  ---
  description: Clear, one-line description of what the rule enforces
  globs: path/to/files/*.ext, other/path/**/*
  alwaysApply: boolean
  ---

  - **Main Points in Bold**
    - Sub-points with details
    - Examples and explanations
  ```

- **File References:**
  - Use `[filename](mdc:path/to/file)` ([filename](mdc:filename)) to reference files
  - Example: [prisma.mdc](mdc:.cursor/rules/prisma.mdc) for rule references
  - Example: [schema.prisma](mdc:prisma/schema.prisma) for code references

- **Code Examples:**
  - Use language-specific code blocks
  ```typescript
  // ✅ DO: Show good examples
  const goodExample = true;
  
  // ❌ DON'T: Show anti-patterns
  const badExample = false;
  ```

- **Rule Content Guidelines:**
  - Start with high-level overview
  - Include specific, actionable requirements
  - Show examples of correct implementation
  - Reference existing code when possible
  - Keep rules DRY by referencing other rules

- **Rule Maintenance:**
  - Update rules when new patterns emerge
  - Add examples from actual codebase
  - Remove outdated patterns
  - Cross-reference related rules

- **Best Practices:**
  - Use bullet points for clarity
  - Keep descriptions concise
  - Include both DO and DON'T examples
  - Reference actual code over theoretical examples
  - Use consistent formatting across rules

---
description: Always specify the exact directory (path) for shell/terminal commands and offer to run them for the user
globs: */**/*.md, */**/*.mdc
alwaysApply: true
---

- **Always specify the full path or directory context for all shell/terminal command instructions**
  - Before any command, include a `cd /path/to/directory` step or clearly state the working directory.
  - When providing multiple commands, group them by directory context and clarify when to switch directories.
  - Example:
    ```sh
    cd /Users/username/project/backend
    source venv/bin/activate
    uvicorn main:app --reload --port 8001
    ```
    _Run these in your terminal, in the order above, from the `backend` directory._
  - For commands that should be run from the project root, explicitly state:
    ```sh
    cd /Users/username/project
    npm run dev
    ```
    _Run this from the project root._

- **Offer to run commands for the user in the correct directory**
  - When possible, ask if the user would like the command executed for them.
  - Example:
    > Would you like me to run this for you in `/Users/username/project/backend`?

- **Best Practices**
  - Never assume the user's current working directory—always be explicit.
  - If the user is unsure, clarify or confirm the directory before running commands.
  - Reference this rule in all command-line instruction documentation and onboarding materials. 